<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Mapping on Journalism with R</title>
    <link>/en/tags/mapping/</link>
    <description>Recent content in Mapping on Journalism with R</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-US</language>
    <lastBuildDate>Sun, 27 May 2018 21:13:14 -0500</lastBuildDate>
    
	<atom:link href="/en/tags/mapping/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Geolocating data</title>
      <link>/en/mapping/geolocating/geolocating/</link>
      <pubDate>Sun, 27 May 2018 21:13:14 -0500</pubDate>
      
      <guid>/en/mapping/geolocating/geolocating/</guid>
      <description>Geolocating addresses in R 
 We’re going to start with geolocating municipal police stations in Connecticut.
We’ll be using the ggmap package for a lot of functions, starting with geolocating addresses with Google Maps.
# if you don&amp;#39;t have the following packages installed, uncomment and run the lines below #install.packages(c(&amp;quot;dplyr&amp;quot;, &amp;quot;ggplot2&amp;quot;, &amp;quot;tidyr&amp;quot;, &amp;quot;ggmap&amp;quot;, &amp;quot;DT&amp;quot;, &amp;quot;knitr&amp;quot;, &amp;quot;readr&amp;quot;)) library(readr) library(dplyr) library(ggplot2) library(tidyr) library(ggmap) library(DT) library(knitr) After we import the data, let’s use the glimpse() function which lists out the variables for the data frame.</description>
    </item>
    
    <item>
      <title>Interactive choropleth maps</title>
      <link>/en/mapping/census_maps/census-maps/</link>
      <pubDate>Sun, 27 May 2018 21:13:14 -0500</pubDate>
      
      <guid>/en/mapping/census_maps/census-maps/</guid>
      <description>Sometimes there are just too many dots on a map. If the point of your map is to know the location of every single data point because of its significance, then fine. Dots can also demonstrate the distribution of data geographically very effectively.
Choropleth or thematic maps are an effective and popular way to show geographic data.
And if it’s interactive, it’s useful for exploratory purposes because it can surface information that can’t be expressed visually easily (Interactive maps for reader purposes need carefully considered, though, because readers will usually not click around).</description>
    </item>
    
    <item>
      <title>Interactive maps with Leaflet</title>
      <link>/en/mapping/leaflet_maps/leaflet/</link>
      <pubDate>Sun, 27 May 2018 21:13:14 -0500</pubDate>
      
      <guid>/en/mapping/leaflet_maps/leaflet/</guid>
      <description>Let’s create a locator map like you would when searching for an address on Google Maps.
Sometimes it’s necessary to zoom in or pan around a map for greater comprehension while exploring data spatially.
The Leaflet R package was created by the folks behind RStudio to integrate with the popular opensource JavaScript library.
It’s great for journalists who have little knowledge of JavaScript who want to make interesting interactives using R.</description>
    </item>
    
    <item>
      <title>Traffic stops case study</title>
      <link>/en/mapping/case_study/traffic-stops/</link>
      <pubDate>Sun, 27 May 2018 21:13:14 -0500</pubDate>
      
      <guid>/en/mapping/case_study/traffic-stops/</guid>
      <description>We’re going to take what we’ve learned so far and do some spatial analysis of traffic stops.
Goal: We’ll figure out which town and census tract each stop occurred in and then pull in demographic data from the Census to determine what types of neighborhoods police tend to pull people over more often.
You could conduct this analysis using software like ArcGIS or QGIS, but we’re going to be doing it all in R.</description>
    </item>
    
  </channel>
</rss>